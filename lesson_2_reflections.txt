What happens when you initialize a repository? Why do you need to do it?

Git init create hidden folder inside current folder which contains various metadata about files contained there. It is used to store everything that is needed for version control. Without git init, there is no repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area sits in between working directory and repository. It allows us to decide which of the files in working directory should be included in next commit.

How can you use the staging area to make sure  you have one commit per logical change?

I can use staging area to create multiple commits from all the changes in working directory. I can add one file to staging, commit it, then add another and so on.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branching can be useful if I want to try making some modification to current code, to test some idea first. Also it can be used if I want to create two versions of my code. Branch helps in that it allows to quickly jump back to original.

How do the diagrams help you visualize the branch structure?

Diagrams make it easy to see relationships of parents of my commits so I can see which branch started where.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

New commit is the result of merging two branches. Its representation shows how is it connected to both branches that were merged.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Automatic merging can save a lot of time when the changes are simple. At the same time, it leaves possibility for manual merge if it is needed.


